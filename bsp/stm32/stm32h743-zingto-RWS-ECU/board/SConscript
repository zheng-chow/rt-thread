import os
import rtconfig
from building import *

Import('SDK_LIB')

cwd = GetCurrentDir()

# add general drivers
src = Split('''
board.c
drv_mpu.c
CubeMX_Config/Src/stm32h7xx_hal_msp.c
''')

if GetDepend(['BSP_USING_ETH']):
    src += ['drv_eth_h7.c']
if GetDepend(['BSP_USING_FDCAN']):
    src += ['drv_fdcan.c']	
if GetDepend(['BSP_ADC_USING_DMA']):
    src += ['drv_adc_dma.c']
if GetDepend(['BSP_USING_QSPI_FLASH']):
    src += Glob('ports/drv_qspi_flash.c')
if GetDepend(['BSP_USING_METER']):
    src += Glob('ports/drv_spi_rn8302b.c')
    src += Glob('ports/reg_rn8302b.c')


path = [cwd]
path += [cwd + '/CubeMX_Config/Inc']
path += [cwd + '/ports']

startup_path_prefix = SDK_LIB

if rtconfig.CROSS_TOOL == 'gcc':
    src += [cwd + '/../../libraries/STM32H7xx_HAL/CMSIS/Device/ST/STM32H7xx/Source/Templates/gcc/startup_stm32h743xx.s']
elif rtconfig.CROSS_TOOL == 'keil':
    src += [cwd + '/../../libraries/STM32H7xx_HAL/CMSIS/Device/ST/STM32H7xx/Source/Templates/arm/startup_stm32h743xx.s']
elif rtconfig.CROSS_TOOL == 'iar':
    src += [cwd + '/../../libraries/STM32H7xx_HAL/CMSIS/Device/ST/STM32H7xx/Source/Templates/iar/startup_stm32h743xx.s']

# STM32H743xx || STM32H750xx || STM32F753xx
# You can select chips from the list above
CPPDEFINES = ['STM32H743xx']
group = DefineGroup('Drivers', src, depend = [''], CPPPATH = path, CPPDEFINES = CPPDEFINES)

Return('group')
